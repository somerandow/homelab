---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unpackerr
  labels:
    app.kubernetes.io/name: "unpackerr"
    app.kubernetes.io/instance: "unpackerr"
  annotations: {}
spec:
  revisionHistoryLimit: 1
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: 
      app.kubernetes.io/name: "unpackerr"
      app.kubernetes.io/instance: "unpackerr"
  template:
    metadata:
      labels: 
        app.kubernetes.io/name: "unpackerr"
        app.kubernetes.io/instance: "unpackerr"
    spec:
      # TODO use dedicated serviceaccount
      serviceAccountName: default
      automountServiceAccountToken: true
      securityContext: 
        fsGroup: 568
        runAsGroup: 568
        runAsUser: 568
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: unpackerr
          image: "docker.io/golift/unpackerr:0.14.5"
          imagePullPolicy: IfNotPresent
          securityContext: 
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          env: 
            - name: TZ
              value: America/Chicago
            - name: UN_INTERVAL
              value: 1m
            - name: UN_PARALLEL
              value: "2"
          envFrom: 
            - secretRef:
                name: unpackerr-env
          ports: []
          volumeMounts: 
            - name: downloads
              mountPath: "/media/downloads"
              subPath: "downloads"
          resources: 
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 200m
              memory: 500Mi
      volumes: 
        - name: downloads
          persistentVolumeClaim:
            claimName: "TO_BE_FILLED"
